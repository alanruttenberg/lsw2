(let ((*load-verbose* nil)
      (*compile-verbose* nil)
      (*suppress-compiler-warnings* (not *load-verbose*)))
  (asdf::oos 'asdf::load-op 'owl :verbose nil))

(defun report (string)
  (let ((args
	 (if (find #\space string)
	     (read-delimited-list #\space string)
	     (if (char= (char string 0) #\:)
		 (list (read-from-string string))
		 (list string)))))
    (let ((fname (if (stringp (second args)) 
		     (second args)
		     (if (symbolp (car args)) 
			 (format nil "~a.html" (string-downcase (string (car args))))
			 (format nil "~a.html" (#"replaceAll" (#"replaceAll" (car args) ".*/" "") "\.owl$" ""))))))
      (setf (car args) (load-kb-jena (car args)))
      (apply 'write-ontology-report (car args) (append (cdr args) (list :fname fname)))
      (quit))))
