(defun test-replicate-inferred-axioms-violate-global-restrictions ()
  (format t "Testing https://github.com/owlcs/owlapi/issues/646")
  (with-ontology naughty-inferred ()
    ((asq
      (declaration (class !occurrent))
      (declaration (class !continuant))
      (disjointclasses !occurrent !continuant)
      (declaration (object-property !occurs-in))
      (declaration (object-property !partof))
      (declaration (object-property !haspart))
      (declaration (object-property !contains-process))
      (transitive-object-property !partof)
      (inverse-object-properties !occurs-in !contains-process)
      (inverse-object-properties !partof !haspart)
      (object-property-domain !occurs-in !occurrent)
      (object-property-range !occurs-in !continuant)
      (object-property-domain !partof !continuant)
      (object-property-range !partof !continuant)
      (sub-object-property-of (object-property-chain !partof !occurs-in) !occurs-in)
      (sub-object-property-of (object-property-chain !occurs-in !partof) !occurs-in)
      ))
    (let* ((opm (new 'OWLObjectPropertyManager (v3kb-manager naughty-inferred) (v3kb-ont naughty-inferred)))
	   (occursin-simple? (not (#"isNonSimple" opm (get-entity !occurs-in :object-property naughty-inferred))))
	   (partof-simple? (not (#"isNonSimple" opm (get-entity !partof :object-property naughty-inferred)))))
      (format t "!occurs-in simple?: ~a~%" occursin-simple?)
      (format t "!partof simple?: ~a~%" partof-simple?))
					;(each-axiom (add-inferred-axioms naughty-inferred :types '(:object-property-characteristics) )
					;(lambda(ax) (print (axiom-to-lisp-syntax ax))))
    (format t "Checking Base...")
    (instantiate-reasoner naughty-inferred :hermit :config (quiet-reasoner-config))
    (check-ontology naughty-inferred :classify t )
    (format t "it's fine.~%")

    (let ((new (new-empty-kb (make-uri !naught))))
      (each-axiom naughty-inferred (lambda(ax) (add-axiom ax new)) nil)
      (add-inferred-axioms naughty-inferred :to-ont new :types '(:object-property-characteristics) )
					;      (each-axiom new (lambda(ax) (print (axiom-to-lisp-syntax ax))))
      (let* ((opm (new 'OWLObjectPropertyManager (v3kb-manager new) (v3kb-ont new)))
	     (occursin-simple? (not (#"isNonSimple" opm (get-entity !occurs-in :object-property new))))
	     (partof-simple? (not (#"isNonSimple" opm (get-entity !partof :object-property new)))))
	(format t "~&!occurs-in simple?: ~a~%" occursin-simple?)
	(format t "!partof simple?: ~a~%" partof-simple?))

      (format t "~&Checking augmented...")
      (multiple-value-bind (res errorp)
	  (ignore-errors
	   (instantiate-reasoner new :hermit :config (quiet-reasoner-config))
	   (check-ontology new :classify t))
	(if errorp
	    (progn (format t "Adding inferred axioms triggered error!")
		   (print (or errorp res)) (values))
	    (format t "It's fine~%"))))))
	   


